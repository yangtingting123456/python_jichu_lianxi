# 1、模拟简单的计算器，要求如下：
# 定义名为Number的类
# 其中有两个整型数据成员n1和n2
# 应声明为私有。编写构造方法：赋予n1和n2初始值
# 再为该类定义加（addition）、减（subtration）、乘（multiplication）、除（division）等公有成员方法
# 分别对两个成员变量执行加、减、乘、除的运算。
# 创建Number类的对象，调用各个方法，并显示计算结果。
#
# 2、创建一个学生类：
# 属性：姓名，年龄，学号 方法：答到，展示学生信息
# 类属性：名称
#
# 创建一个班级类：
# 属性：学生，班级名 方法：添加学生，删除学生，点名
#
# 3、设计一个车类，属性：车的类型、车的速度、
# 分别再建立两个子类：小汽车类、电动汽车类 去继承车类
# 为了实现汽车增加能源的方式，在父类中添加 一个增加能源方法 increased_energy() 做出抽象方法
# 实现小汽车类加 油  电动汽车充电的不同实现
#
# 4、设计一个数据类型类 DataType ,包含一个抽象方法 length 方法，
# 并建立多个子类（Dict、List、String、Tuple）对length 方法进行实现：
# 如Dict子类 实现length方法功能，输出显示“字典形式的数据，包含3个项”，依次类推
# 创建一个get_length方法，能实现传入不同的子类对象，输出不同的求长度的结果
#
# 5、 写一个传奇游戏中的猪类，类中有属性：颜色、个头、攻击力、准确度。有一个展示猪信息的方法。再写一个测试类，生成一个猪的对象，将此猪的颜色值为“白色”，个头为5厘米，攻击力为50点血，准确度为0.8。要求输出此猪的信息格式为：一只白色的猪，个头5厘米，攻击为为50点血，准确度为0.8，我好怕怕呀
# 6、 写一个牌的类，类中有属性：花色、值。有一个展示牌信息的方法。要求写一个测试类，生成一张牌，将此牌的花色设为“梅花”，将此牌的值设为5。最后显示此牌的信息，要求格式为:梅花5
# 7、 写一个猪类，类中的属性：品种，颜色，攻击力。类中有方法：
#      无返回值的方法：
#     （一）猪走路的方法，没有返回值，要求输出格式为“某某品种的某某颜色的猪走来走去”。（二）猪打人的方法，没有返回值，要求输出格式为“某某品种的某某颜色的猪打人了，攻击力为多少”。(三）猪吃饭的方法，没有返回值，要求输出格式为“某某品种的某某颜色的猪吃得真多”。
#      有返回值的方法：
#     （一）显示自身信息的方法（show_info)。（二）得到此猪品种的方法，要求在此方法中没有输出，返回此猪的品种。（三）得到此猪颜色的方法，要求在此方法中没有输出，返回此猪的颜色。
# 8、 写一个汽车的类，类中有属性：品牌，价格，颜色。类中有方法：
#     （一）显示当前汽车对象的所有属性的方法show_info。
#     （二）汽车启动的方法，要求输出“XX品牌的汽车启动了”。
#     （三）汽车加速的方法，要求输出“XX品牌的汽车加速中”。
#     （四）汽车被卖的方法，要求输出“XX品牌的汽车被以XX元的价格卖了”。