python 实战
1.excel操作
import xlrd
import os
#excel操作
#使用xlrd模块，第三方工具包，可以读取xlsx,xls的excel文件(版本必须使用1.2.0)，xlwt 写入数据到excel中
#创建工作簿对象
current_path = os.path.dirname(__file__)
excel_path = os.path.join(current_path, 'data/StudentInfo.xlsx')
WorkBook = xlrd.open_workbook(excel_path)
#获取工作簿的第一张表
sheet01 = WorkBook.sheet_by_name('StudentInfo')
#获取工作簿的数据,获取列,获取行
print('获取sheet的总列数：',sheet01.ncols)
print('获取sheet的总行数：',sheet01.nrows)
print('获取某一个表格的数据：',sheet01.cell_value(0,1))
#获取第一行数据或第一列数据
print('获取第一行数据：',sheet01.row(1))
print('获取第一列数据：',sheet01.col(1))
#类型,1.   0  empty         2.   1    string    3.   2   number     4.    3 date
#    5.    4    boolean    6.   5     error
print('单元格类型：',sheet01.cell_type(1,1))

2.制作自己需要的数据格式
  2.1将数据保存为列表
import os
import xlrd
#读取excel中的数据制作成列表，对象
#1.读取数据保存为列表
#[[学号，姓名，年龄，性别，成绩],[学号，姓名，年龄，性别，成绩],[]]
#创建工作簿对象
current_path = os.path.dirname(__file__)
excel_path = os.path.join(current_path, 'data/StudentInfo.xlsx')
WorkBook = xlrd.open_workbook(excel_path)
# #获取工作簿的第一张表
sheet01 = WorkBook.sheet_by_name('StudentInfo')
all_student_info = []
n = sheet01.nrows
l = sheet01.ncols
for i in range(1,sheet01.nrows):  #总行
    row_student_info = []
    for j in range(sheet01.ncols):  #总列
        row_student_info.append(sheet01.cell_value(i,j))
    all_student_info.append(row_student_info)
print(all_student_info)
for i in all_student_info:
    print(i)

  2.2将数据保存为对象
#2.读取数据保存为对象
#[对象1：['学号','姓名','年龄','乘积']]
class StudentBaseInf:
    def __init__(self,id,name,age,sex,score):
        self.id = id
        self.name = name
        self.age = age
        self.sex = sex
        self.score = score

import StudentBaseInfo
current_path = os.path.dirname(__file__)
excel_path = os.path.join(current_path, 'data/StudentInfo.xlsx')
WorkBook = xlrd.open_workbook(excel_path)
#获取工作簿的第一张表
sheet = WorkBook.sheet_by_name('StudentInfo')
all_student_obj=[]
#-----方法1：获取每个单元格然后赋值
#-----方法2：循环获取保存
for i in range(1,sheet.nrows):
    students = StudentBaseInfo.StudentBaseInf(sheet.cell_value(i,0),
                               sheet.cell_value(i,1),
                               sheet.cell_value(i,2),
                               sheet.cell_value(i,3),
                               sheet.cell_value(i,4))
    all_student_obj.append(students)

for i in range(len(all_student_obj)):
    print(all_student_obj[i].name)

3.函数的封装，类封装
import os
import xlrd
#读取excel中的数据制作成列表，对象的封装
# def read_excel_list(excel_path):
#     WorkBook = xlrd.open_workbook(excel_path)
#     # #获取工作簿的第一张表
#     sheet01 = WorkBook.sheet_by_name('StudentInfo')
#     all_student_info = []
#     for i in range(1, sheet01.nrows):  # 总行
#         row_student_info = []
#         for j in range(sheet01.ncols):  # 总列
#             row_student_info.append(sheet01.cell_value(i, j))
#         all_student_info.append(row_student_info)
#     return all_student_info
#
# current_path = os.path.dirname(__file__)
# excel_path = os.path.join(current_path, 'data/StudentInfo.xlsx')
# print(read_excel_list(excel_path))

#2.对象的封装
import StudentBaseInfo
def read_excel_obj(excel_path):
    WorkBook = xlrd.open_workbook(excel_path)
    # #获取工作簿的第一张表
    sheet = WorkBook.sheet_by_name('StudentInfo')
    all_student_obj = []
    # -----方法1：获取每个单元格然后赋值
    # -----方法2：循环获取保存
    for i in range(1, sheet.nrows):
        students = StudentBaseInfo.StudentBaseInf(sheet.cell_value(i, 0),
                                                  sheet.cell_value(i, 1),
                                                  sheet.cell_value(i, 2),
                                                  sheet.cell_value(i, 3),
                                                  sheet.cell_value(i, 4))
        all_student_obj.append(students)
    return all_student_obj

类封装
import os,xlrd
import StudentBaseInfo
class ReadExcel:
    def __init__(self,excel_path,sheet_name):
        self.excel_path = excel_path
        self.sheet_name = sheet_name
    # 读取excel中的数据制作成列表，对象的封装
    def read_excel_list(self):
        WorkBook = xlrd.open_workbook(self.excel_path)
        sheet01 = WorkBook.sheet_by_name(self.sheet_name)
        all_student_info = []
        for i in range(1, sheet01.nrows):  # 总行
            row_student_info = []
            for j in range(sheet01.ncols):  # 总列
                row_student_info.append(sheet01.cell_value(i, j))
            all_student_info.append(row_student_info)
        return all_student_info
    # 2.对象的封装
    def read_excel_obj(self):
        WorkBook = xlrd.open_workbook(self.excel_path)
        sheet = WorkBook.sheet_by_name(self.sheet_name)
        all_student_obj = []
        for i in range(1, sheet.nrows):
            students = StudentBaseInfo.StudentBaseInf(sheet.cell_value(i, 0),
                                                      sheet.cell_value(i, 1),
                                                      sheet.cell_value(i, 2),
                                                      sheet.cell_value(i, 3),
                                                      sheet.cell_value(i, 4))
            all_student_obj.append(students)
        return all_student_obj
#测试
if __name__ == '__main__':
    current_path = os.path.dirname(__file__)
    excel_path = os.path.join(current_path, 'data/StudentInfo.xlsx')
    RD_excel = ReadExcel(excel_path,'StudentInfo')
    print(RD_excel.read_excel_list())
    for i in range(len(RD_excel.read_excel_obj())):
        print(RD_excel.read_excel_obj()[i].name)

4.日志的使用


5.配置文件的使用
import configparser
import os
#读取ini配置文件
current_path = os.path.dirname(__file__)
conf_path = os.path.join(current_path,'conf/config.ini')
conf = configparser.ConfigParser()  #创建conf对象
conf.read(conf_path,encoding='utf-8')
print('获取全部的组名：',conf.sections())
print('获取某个组中的内容：',conf.items('default'))
print('获取某个组中对应的值：',conf.get('default','excel_path'))
print('获取某个组下所有的key：',conf.options('default'))


6.异常处理的使用
        try:
            WorkBook = xlrd.open_workbook(self.excel_path)
        except FileNotFoundError as  e:
            print('文件路径不存在，系统自动给默认路径')
            current_path = os.path.dirname(__file__)
            excel_path1 = os.path.join(current_path, 'data/StudentInfo.xlsx')
            WorkBook = xlrd.open_workbook(excel_path1)


