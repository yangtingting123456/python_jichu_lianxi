                        python变量
变量：变量就是给数据取的一个名字，值可变的。变量明给写程序看的，为了给写程序的人看的懂。
常量：在运行中保持不变的量
python变量赋值：变量不需要申明的，每个变量在使用前都必须赋初始值。
eg：如何查看变量的地址：
a = 10
print(id(a))
批量赋值：赋同一个值： a=b=c=d=10           赋不用的值： a,b,c,d = 1,'a',[1,'a'],(1,2,4)
标识符
标识符概念：开发人员在程序中自定义的一些符号和名称。标识符是自己定义的。如变量名，函数名等。
python标识符规则
1.由字母，数字，下划线组成。
2.不能以数字开头。
3.不能以关键字作为标识符。
4.标识符区分大小写。
注意：在公司写代码标识符命令：1.见名知意---注释。  2.驼峰式命令。（类名首字母必须大写）
注释：单行使用：#   多行注释用：'''注释内容 '''
                        python 基本数据类型
number(数字)：int(整型),
             float(浮点型),
             bool（布尔型）:在python中用0和1表示，0代表True，1代表False,
             complex(复数型)：eg:c=complex(3,5)
科学计数法：a=22e2  表示：a= 22*10的2次方  b=22e-1  表示：22*10的-2次方
字符串：python中只有字符串，没有字符的区别；  定义字符串用‘’表示；在python中‘’，“” ，‘“”’是没有区别的
      eg：a=‘hello’  b="hello world"   c= '"hello everyone"'  字符串需要换行用三个引号
      （1）字符串可以进行索引和切片，字符串定义好了之后，一个字符串从左往右每个字符是从0开始的，从右往左是从-1开始的
      引用下标的语法，标量名【下标值】  注意：切片包头不包围
      eg：s1 = “hello world”
      print(s1[0])  #显示第一个字符
      print(s1[-1])  #显示最后一个字符
      print(s1[3:6])  #显示第4个字符和第5个字符
      print(s1[2:])    #显示第3个以后的字符
      print(s1[-5:-2)  #显示倒数第5个字符到第3个字符
      print(s1*5)   #将字符串s1重复5次输出
      s2 = 'kkk'
      print(s1+s2)   #字符串的拼接   注意：同一种字符串才可以拼接，不同的字符串不能拼接
字符串常用函数：
capitalize() :将字符串第一个字母大写
lower(): 将整个字符串都小写
upper(): 将整个字符串都大写
replace(old,[new][,count]): 将字符串中的old字符串替换new，替换count次，默认全替换
split(): 将字符串用给定的标准分割，并且以列表形式妇女会分割后的元素组。
eg:s1 = 'HEllo world'
print(s1.capitalize())
print(s1.upper())
print(s1.split('o'))
print(s1.replace('e','U'))
字符串格式输出：
%d，%i：带符号的十进制数
%o：不带符号的八进制数
%u：不带符号的十进制数
%x：不带符号的十六进制数（小写）
%X：不带符号的十六进制数（大写）
%e：科学计数法表示浮点数（小写）
%E：科学计数法表示浮点数（大写）
%f,%F：十进制浮点数
%g：如果指数大于-4或者小于精度值则和e相同，其它情况和f相同
%G：如果指数大于-4或者夏鸥精度值和E相同，其它情况和F相同
%C：单字符（接收整型，或则一个字符的字符串）
%r：字符串（使用repr转换）
%s：字符串（使用str转换）
eg：浮点数格式输出
t=1.888388
print('今天读书%06.2f小时')   #浮点数默认输出六为小数，.2表示只输出两位小数， %6表示占用的宽度，占用的宽度用0表示，在6的前面加0

列表（list）：其它开发语言中跟我们列表中有一点相同，1.数据类型必须一致。  2.数组的长度必须规定好
特点：python列表中是python中最复杂的数据类型，可以定义一种或多种数据类型，也可以在列表中嵌套列表。
定义：变量名 = [数值1，数值2...]
eg: a= [1,2,4]
    b = ['a',2,(2,3,5),['b',2,3]]
    c = [[3,2]]  #列表c中只有一个元素，这个元素是一个列表，这个列表中有
    注意：列表可以进行切换和索引，从左往右是从0开始，从右往左是从-1开始。
    如果只获取一个元素：变量名[下标]，获取多个元素：变量名[下标起始值：下标结束值]
    print(a[0])    #输出该列表中的第一个元素
    print(a[0:2])  #输出该列表中的第一个到第二个元素
    print(b[3][2])   #输入该列表的第三个元素中的第2个元素
    print(a+b)   #将列表a和列表b拼接
    print(a*2)  #将列表a输出两次
列表常见的函数：
L.append(var) # 追加元素
L.insert(index,var) # 在指定位置插入元素
L.pop(var) # 返回最后一个元素，并从list中删除，也可以删除指定位置的元素
L.remove(ver) # 删除第一次出现的元素
L.count(var) # 该元素在列表中出现的位置
L.index(var) # 该元素的位置，无则抛异常
L.extend(var) # 追加list，即合并list到L上
L.sort() #排序
L.reverse() # 反转
eg：b = ['a',2,(2,3,5),['b',2,3]]
# L.append(var) # 追加元素
b.append('hello word')
print(b)
# L.insert(index,var) # 在指定位置插入元素
b.insert(2,999)
print(b)
# L.pop(var) # 返回最后一个元素，并从list中删除，也可以删除指定位置的元素
b.pop(2)
print(b)
# L.remove(ver) # 删除第一次出现的元素
b.remove('a')
print(b)
# L.count(var) # 该元素在列表中出现的位置
print(b.count(2))
# L.index(var) # 该元素第一次出现的位置，无则抛异常
print(b.index(2))
# # L.extend(var) # 追加list，即合并list到L上
u = ['I' ,'Love', 'You']
b.extend(u)
print(b)
# L.sort() #排序
i= [4,2,1,6,6,2,9,6]
i.sort(reverse=False)  #降序reverse=False
print(i)
# L.reverse() # 反转
u = [2,3,20]
u.reverse()
print(u)
list的复制
L1 = L  #将L1为L的别名，用C来说就是指针地址相同，对L1操作即对L操作。函数参数就是这样
L1 = L[:]  #L1为L的克隆，即另一个拷贝
list01 = list02   #地址传递
print(id(list01))
print(id(lsit01))  #list01he list02的地址相同
list03 = list02[:]   #值传递
print(id(lsit03))
print(id(lsit02))   #list02和list03在内存的地址不一样
对list02的值进行改变，list03的值不变，list01也多了一个值，
即地址传递，改变一个列表，列表的值也会改变，值传递，改变一个列表，另外一个列表不会改变

tuple(元组)：类似list(列表)的另外类型。
特点：不可变，元组是一个只读的列表，一旦定义就无法修改了，它使用()进行定义。
元组切换和索引和list(列表)一致的，也可以进行重复和拼接的        如：订单号
使用的函数有：count(),index()....
eg： order_no = ('867890','3423')

sets(集合):用{}进行定义
特定：无序，元素不可重复,不能重复，拼接，索引和切片，集合是进行计算的，并集，交集，差集
eg：set01 = {‘aa’,‘bb’}
集合可以进行的操作
a= {1,2,3,5,'c','s'}
b = {3,5,2,2,1,'j'}
print(a-b)  #差集，只返回第一个集合存在的，但不在第二个集合中的
print(a&b)  #交集,返回两个集合同共同的元素
print(a|b)   #并集,将连个集合中合并去重输出
print(a^b)  #交集的补集，返回两个集合的补集
print('a' in a )  #判断某个元素在不在某个集合中

dictionary(字典)：键值对存在内存中，如：手机号，学号....
定义：方法一：dict01 = {key01:value01,key02:value02,key03:value03....}
     方法二：使用dict进行定义，dict02 = dict{name = 'ytt',age = 24},键名不能重复
     方法三：dict03 = dict((['nanme','ytt'],['age',23]))
     方法四：使用内置函数：
     lsit01 = [1,2,3,4]
     dict04 = dict.fromkeys(lsit01,'hello')
     不能索引和切片
如何改变字典的值：
a = {'name':'ytt','age':27}
b = {'salary':2999}
a['age'] = 26
如果key存在则值改变，key不存在增加key和value的值
print(a.get('name'))  #通过get()函数获取字典中的某个key的值
print(a.keys())  #获取列表的所有的key
print(a.values())  #获取字典中共key对应的所有值
print(a.pop('name',default = 'sorry,键名不存在')) #删除字典中的值，当删除的key不存在时候，则抛出异常，删除之后，再将值返
print(a.update(b))  #更新字典，将两个字典进行合并，有则覆盖，没有则添加
a.clear()  #将字典a中的元素清空
del a #将字典a删除

数据类型转换：
1.两种类型之间相互兼容，目标类型大于源类型可以相互转换
#布尔+整型   布尔
#布尔+浮点  浮点
#整型+浮点   浮点

不可变的数据类型有四个：number（数字）,Sting(字符串),Tuple(元组),sets(集合)
可变的数据类型有两个：list(列表),dictionary(字典)
如何查看数据的类型：print(type(变量名称))

                        python 输入，输出语句


                        python 运算符


                        python 流程控制语句


